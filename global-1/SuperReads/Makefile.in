# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##############################
# Gtest build.
##############################
# Build rules for libraries.
# check_LTLIBRARIES = libgtest.la libgtest_main.la

# libgtest_la_SOURCES = unittests/gtest/src/gtest-all.cc
# libgtest_main_la_SOURCES = unittests/gtest/src/gtest_main.cc
# libgtest_main_la_LIBADD = libgtest.la
# libgtest_la_CXXFLAGS = -I$(srcdir)/unittests/gtest	\
# -I$(srcdir)/unittests/gtest/include
# libgtest_main_la_CXXFLAGS = -I$(srcdir)/unittests/gtest	\
# -I$(srcdir)/unittests/gtest/include





VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = error_corrected2frg$(EXEEXT) \
	reverse_complement$(EXEEXT) reduce_sr$(EXEEXT) \
	sorted_merge$(EXEEXT) create_k_unitigs_large_k$(EXEEXT) \
	create_k_unitigs_large_k2$(EXEEXT) homo_trim$(EXEEXT) \
	bloom_query$(EXEEXT) filter_overlap_file$(EXEEXT) \
	rename_filter_fastq$(EXEEXT) samToDelta$(EXEEXT) \
	createFastaSuperReadSequences$(EXEEXT) \
	findMatchesBetweenKUnitigsAndReads$(EXEEXT) \
	createKUnitigMaxOverlaps$(EXEEXT) \
	eliminateBadSuperReadsUsingList$(EXEEXT) \
	getSuperReadInsertCountsFromReadPlacementFile$(EXEEXT) \
	getSuperReadInsertCountsFromReadPlacementFileTwoPasses$(EXEEXT) \
	joinKUnitigs_v3$(EXEEXT) outputRecordsNotOnList$(EXEEXT) \
	killBadKUnitigs$(EXEEXT) \
	makeAdjustmentFactorsForNumReadsForAStatBasedOnGC$(EXEEXT) \
	makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2$(EXEEXT) \
	create_sr_frg$(EXEEXT) splitFileAtNs$(EXEEXT) \
	getATBiasInCoverageForIllumina_v2$(EXEEXT) \
	collectReadSequencesForLocalGapClosing$(EXEEXT) \
	runByDirectory$(EXEEXT) \
	extendSuperReadsForUniqueKmerNeighbors$(EXEEXT) \
	extendSuperReadsBasedOnUniqueExtensions$(EXEEXT) \
	addSurrogatesToFrgCtgFile$(EXEEXT)
TESTS = all_tests$(EXEEXT)
check_PROGRAMS = all_tests$(EXEEXT)
subdir = SuperReads
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_openmp.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4-ax_perl_ext.m4 \
	$(top_srcdir)/m4/m4-ax_pkg_swig.m4 \
	$(top_srcdir)/m4/m4-ax_swig_enable_cxx.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_bin_SCRIPTS) \
	$(noinst_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(datadir)"
PROGRAMS = $(bin_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libgtest_a_AR = $(AR) $(ARFLAGS)
libgtest_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libgtest_a_OBJECTS =  \
	unittests/gtest/src/libgtest_a-gtest-all.$(OBJEXT)
libgtest_a_OBJECTS = $(am_libgtest_a_OBJECTS)
libgtest_main_a_AR = $(AR) $(ARFLAGS)
libgtest_main_a_DEPENDENCIES = libgtest.a
am_libgtest_main_a_OBJECTS =  \
	unittests/gtest/src/libgtest_main_a-gtest_main.$(OBJEXT)
libgtest_main_a_OBJECTS = $(am_libgtest_main_a_OBJECTS)
libutils_a_AR = $(AR) $(ARFLAGS)
libutils_a_LIBADD =
am_libutils_a_OBJECTS = lib/fork_exec.$(OBJEXT)
libutils_a_OBJECTS = $(am_libutils_a_OBJECTS)
am_addSurrogatesToFrgCtgFile_OBJECTS =  \
	src2/addSurrogatesToFrgCtgFile.$(OBJEXT)
addSurrogatesToFrgCtgFile_OBJECTS =  \
	$(am_addSurrogatesToFrgCtgFile_OBJECTS)
addSurrogatesToFrgCtgFile_LDADD = $(LDADD)
am__DEPENDENCIES_1 = libutils.a
am__DEPENDENCIES_2 =
addSurrogatesToFrgCtgFile_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_all_tests_OBJECTS = unittests/all_tests-test_main.$(OBJEXT) \
	unittests/all_tests-test_charb.$(OBJEXT) \
	unittests/all_tests-test_exp_buffer.$(OBJEXT) \
	unittests/all_tests-test_charbuf.$(OBJEXT) \
	unittests/all_tests-test_heap.$(OBJEXT) \
	unittests/all_tests-test_sr_names.$(OBJEXT) \
	unittests/all_tests-test_bloom_filter.$(OBJEXT) \
	unittests/all_tests-test_bloom_counter2.$(OBJEXT) \
	unittests/all_tests-test_skip_list_set.$(OBJEXT) \
	unittests/all_tests-test_skip_list_map.$(OBJEXT) \
	unittests/all_tests-test_rbtree.$(OBJEXT) \
	unittests/all_tests-test_multi_thread_skip_list_set.$(OBJEXT) \
	unittests/all_tests-test_multi_thread_skip_list_map.$(OBJEXT) \
	unittests/all_tests-test_read_parser.$(OBJEXT) \
	unittests/all_tests-test_hash.$(OBJEXT) \
	unittests/all_tests-test_exp_vector.$(OBJEXT) \
	unittests/all_tests-test_thread_pool.$(OBJEXT) \
	unittests/all_tests-test_fork_exec.$(OBJEXT) \
	src/all_tests-fibonacci_coding.$(OBJEXT) \
	src/all_tests-MurmurHash3.$(OBJEXT) \
	src/all_tests-gcc_builtins.$(OBJEXT) \
	src/all_tests-read_parser.$(OBJEXT) \
	unittests/all_tests-misc.$(OBJEXT)
all_tests_OBJECTS = $(am_all_tests_OBJECTS)
all_tests_DEPENDENCIES = libutils.a libgtest.a
all_tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(all_tests_CXXFLAGS) \
	$(CXXFLAGS) $(all_tests_LDFLAGS) $(LDFLAGS) -o $@
am_bloom_query_OBJECTS = src/bloom_query.$(OBJEXT) \
	src/MurmurHash3.$(OBJEXT)
bloom_query_OBJECTS = $(am_bloom_query_OBJECTS)
bloom_query_LDADD = $(LDADD)
bloom_query_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_collectReadSequencesForLocalGapClosing_OBJECTS =  \
	src2/collectReadSequencesForLocalGapClosing.$(OBJEXT)
collectReadSequencesForLocalGapClosing_OBJECTS =  \
	$(am_collectReadSequencesForLocalGapClosing_OBJECTS)
collectReadSequencesForLocalGapClosing_LDADD = $(LDADD)
collectReadSequencesForLocalGapClosing_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_createFastaSuperReadSequences_OBJECTS =  \
	src2/createFastaSuperReadSequences.$(OBJEXT)
createFastaSuperReadSequences_OBJECTS =  \
	$(am_createFastaSuperReadSequences_OBJECTS)
createFastaSuperReadSequences_LDADD = $(LDADD)
createFastaSuperReadSequences_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_createKUnitigMaxOverlaps_OBJECTS =  \
	src2/createKUnitigMaxOverlaps.$(OBJEXT)
createKUnitigMaxOverlaps_OBJECTS =  \
	$(am_createKUnitigMaxOverlaps_OBJECTS)
createKUnitigMaxOverlaps_LDADD = $(LDADD)
createKUnitigMaxOverlaps_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_create_k_unitigs_large_k_OBJECTS =  \
	src/create_k_unitigs_large_k.$(OBJEXT)
create_k_unitigs_large_k_OBJECTS =  \
	$(am_create_k_unitigs_large_k_OBJECTS)
create_k_unitigs_large_k_LDADD = $(LDADD)
create_k_unitigs_large_k_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_create_k_unitigs_large_k2_OBJECTS =  \
	src/create_k_unitigs_large_k2.$(OBJEXT)
create_k_unitigs_large_k2_OBJECTS =  \
	$(am_create_k_unitigs_large_k2_OBJECTS)
create_k_unitigs_large_k2_LDADD = $(LDADD)
create_k_unitigs_large_k2_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_create_sr_frg_OBJECTS = src2/create_sr_frg.$(OBJEXT)
create_sr_frg_OBJECTS = $(am_create_sr_frg_OBJECTS)
create_sr_frg_LDADD = $(LDADD)
create_sr_frg_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_eliminateBadSuperReadsUsingList_OBJECTS =  \
	src2/eliminateBadSuperReadsUsingList.$(OBJEXT)
eliminateBadSuperReadsUsingList_OBJECTS =  \
	$(am_eliminateBadSuperReadsUsingList_OBJECTS)
eliminateBadSuperReadsUsingList_LDADD = $(LDADD)
eliminateBadSuperReadsUsingList_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_error_corrected2frg_OBJECTS = src/error_corrected2frg.$(OBJEXT)
error_corrected2frg_OBJECTS = $(am_error_corrected2frg_OBJECTS)
error_corrected2frg_LDADD = $(LDADD)
error_corrected2frg_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_extendSuperReadsBasedOnUniqueExtensions_OBJECTS =  \
	src2/extendSuperReadsBasedOnUniqueExtensions.$(OBJEXT)
extendSuperReadsBasedOnUniqueExtensions_OBJECTS =  \
	$(am_extendSuperReadsBasedOnUniqueExtensions_OBJECTS)
extendSuperReadsBasedOnUniqueExtensions_LDADD = $(LDADD)
extendSuperReadsBasedOnUniqueExtensions_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_extendSuperReadsForUniqueKmerNeighbors_OBJECTS =  \
	src2/extendSuperReadsForUniqueKmerNeighbors.$(OBJEXT)
extendSuperReadsForUniqueKmerNeighbors_OBJECTS =  \
	$(am_extendSuperReadsForUniqueKmerNeighbors_OBJECTS)
extendSuperReadsForUniqueKmerNeighbors_LDADD = $(LDADD)
extendSuperReadsForUniqueKmerNeighbors_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_filter_overlap_file_OBJECTS = src/filter_overlap_file.$(OBJEXT)
filter_overlap_file_OBJECTS = $(am_filter_overlap_file_OBJECTS)
filter_overlap_file_LDADD = $(LDADD)
filter_overlap_file_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_findMatchesBetweenKUnitigsAndReads_OBJECTS =  \
	src/read_parser.$(OBJEXT) \
	src2/findMatchesBetweenKUnitigsAndReads.$(OBJEXT) \
	src/gcc_builtins.$(OBJEXT)
findMatchesBetweenKUnitigsAndReads_OBJECTS =  \
	$(am_findMatchesBetweenKUnitigsAndReads_OBJECTS)
findMatchesBetweenKUnitigsAndReads_LDADD = $(LDADD)
findMatchesBetweenKUnitigsAndReads_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_getATBiasInCoverageForIllumina_v2_OBJECTS =  \
	src2/getATBiasInCoverageForIllumina_v2.$(OBJEXT)
getATBiasInCoverageForIllumina_v2_OBJECTS =  \
	$(am_getATBiasInCoverageForIllumina_v2_OBJECTS)
getATBiasInCoverageForIllumina_v2_LDADD = $(LDADD)
getATBiasInCoverageForIllumina_v2_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_getSuperReadInsertCountsFromReadPlacementFile_OBJECTS =  \
	src2/getSuperReadInsertCountsFromReadPlacementFile.$(OBJEXT) \
	src/fibonacci_coding.$(OBJEXT) src/MurmurHash3.$(OBJEXT)
getSuperReadInsertCountsFromReadPlacementFile_OBJECTS =  \
	$(am_getSuperReadInsertCountsFromReadPlacementFile_OBJECTS)
getSuperReadInsertCountsFromReadPlacementFile_LDADD = $(LDADD)
getSuperReadInsertCountsFromReadPlacementFile_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_getSuperReadInsertCountsFromReadPlacementFileTwoPasses_OBJECTS = src2/getSuperReadInsertCountsFromReadPlacementFileTwoPasses.$(OBJEXT) \
	src/fibonacci_coding.$(OBJEXT) src/MurmurHash3.$(OBJEXT)
getSuperReadInsertCountsFromReadPlacementFileTwoPasses_OBJECTS = $(am_getSuperReadInsertCountsFromReadPlacementFileTwoPasses_OBJECTS)
getSuperReadInsertCountsFromReadPlacementFileTwoPasses_LDADD =  \
	$(LDADD)
getSuperReadInsertCountsFromReadPlacementFileTwoPasses_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_homo_trim_OBJECTS = src/homo_trim.$(OBJEXT)
homo_trim_OBJECTS = $(am_homo_trim_OBJECTS)
homo_trim_LDADD = $(LDADD)
homo_trim_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_joinKUnitigs_v3_OBJECTS = src2/joinKUnitigs_v3.$(OBJEXT)
joinKUnitigs_v3_OBJECTS = $(am_joinKUnitigs_v3_OBJECTS)
joinKUnitigs_v3_LDADD = $(LDADD)
joinKUnitigs_v3_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_killBadKUnitigs_OBJECTS = src2/killBadKUnitigs.$(OBJEXT)
killBadKUnitigs_OBJECTS = $(am_killBadKUnitigs_OBJECTS)
killBadKUnitigs_LDADD = $(LDADD)
killBadKUnitigs_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_OBJECTS = src2/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC.$(OBJEXT)
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_OBJECTS = $(am_makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_OBJECTS)
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_LDADD = $(LDADD)
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_OBJECTS = src2/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2.$(OBJEXT)
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_OBJECTS = $(am_makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_OBJECTS)
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_LDADD = $(LDADD)
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_outputRecordsNotOnList_OBJECTS =  \
	src2/outputRecordsNotOnList.$(OBJEXT)
outputRecordsNotOnList_OBJECTS = $(am_outputRecordsNotOnList_OBJECTS)
outputRecordsNotOnList_LDADD = $(LDADD)
outputRecordsNotOnList_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_reduce_sr_OBJECTS = src/reduce_sr.$(OBJEXT)
reduce_sr_OBJECTS = $(am_reduce_sr_OBJECTS)
reduce_sr_LDADD = $(LDADD)
reduce_sr_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_rename_filter_fastq_OBJECTS = src/rename_filter_fastq.$(OBJEXT)
rename_filter_fastq_OBJECTS = $(am_rename_filter_fastq_OBJECTS)
rename_filter_fastq_LDADD = $(LDADD)
rename_filter_fastq_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_reverse_complement_OBJECTS = src/reverse_complement.$(OBJEXT)
reverse_complement_OBJECTS = $(am_reverse_complement_OBJECTS)
reverse_complement_LDADD = $(LDADD)
reverse_complement_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_runByDirectory_OBJECTS = src2/runByDirectory.$(OBJEXT)
runByDirectory_OBJECTS = $(am_runByDirectory_OBJECTS)
runByDirectory_LDADD = $(LDADD)
runByDirectory_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_samToDelta_OBJECTS = src/samToDelta.$(OBJEXT)
samToDelta_OBJECTS = $(am_samToDelta_OBJECTS)
samToDelta_LDADD = $(LDADD)
samToDelta_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_sorted_merge_OBJECTS = src/sorted_merge.$(OBJEXT)
sorted_merge_OBJECTS = $(am_sorted_merge_OBJECTS)
sorted_merge_LDADD = $(LDADD)
sorted_merge_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_splitFileAtNs_OBJECTS = src2/splitFileAtNs.$(OBJEXT)
splitFileAtNs_OBJECTS = $(am_splitFileAtNs_OBJECTS)
splitFileAtNs_LDADD = $(LDADD)
splitFileAtNs_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS) $(dist_bin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = lib/$(DEPDIR)/fork_exec.Po \
	src/$(DEPDIR)/MurmurHash3.Po \
	src/$(DEPDIR)/all_tests-MurmurHash3.Po \
	src/$(DEPDIR)/all_tests-fibonacci_coding.Po \
	src/$(DEPDIR)/all_tests-gcc_builtins.Po \
	src/$(DEPDIR)/all_tests-read_parser.Po \
	src/$(DEPDIR)/bloom_query.Po \
	src/$(DEPDIR)/create_k_unitigs_large_k.Po \
	src/$(DEPDIR)/create_k_unitigs_large_k2.Po \
	src/$(DEPDIR)/error_corrected2frg.Po \
	src/$(DEPDIR)/fibonacci_coding.Po \
	src/$(DEPDIR)/filter_overlap_file.Po \
	src/$(DEPDIR)/gcc_builtins.Po src/$(DEPDIR)/homo_trim.Po \
	src/$(DEPDIR)/read_parser.Po src/$(DEPDIR)/reduce_sr.Po \
	src/$(DEPDIR)/rename_filter_fastq.Po \
	src/$(DEPDIR)/reverse_complement.Po \
	src/$(DEPDIR)/samToDelta.Po src/$(DEPDIR)/sorted_merge.Po \
	src2/$(DEPDIR)/addSurrogatesToFrgCtgFile.Po \
	src2/$(DEPDIR)/collectReadSequencesForLocalGapClosing.Po \
	src2/$(DEPDIR)/createFastaSuperReadSequences.Po \
	src2/$(DEPDIR)/createKUnitigMaxOverlaps.Po \
	src2/$(DEPDIR)/create_sr_frg.Po \
	src2/$(DEPDIR)/eliminateBadSuperReadsUsingList.Po \
	src2/$(DEPDIR)/extendSuperReadsBasedOnUniqueExtensions.Po \
	src2/$(DEPDIR)/extendSuperReadsForUniqueKmerNeighbors.Po \
	src2/$(DEPDIR)/findMatchesBetweenKUnitigsAndReads.Po \
	src2/$(DEPDIR)/getATBiasInCoverageForIllumina_v2.Po \
	src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFile.Po \
	src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFileTwoPasses.Po \
	src2/$(DEPDIR)/joinKUnitigs_v3.Po \
	src2/$(DEPDIR)/killBadKUnitigs.Po \
	src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC.Po \
	src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2.Po \
	src2/$(DEPDIR)/outputRecordsNotOnList.Po \
	src2/$(DEPDIR)/runByDirectory.Po \
	src2/$(DEPDIR)/splitFileAtNs.Po \
	unittests/$(DEPDIR)/all_tests-misc.Po \
	unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Po \
	unittests/$(DEPDIR)/all_tests-test_bloom_filter.Po \
	unittests/$(DEPDIR)/all_tests-test_charb.Po \
	unittests/$(DEPDIR)/all_tests-test_charbuf.Po \
	unittests/$(DEPDIR)/all_tests-test_exp_buffer.Po \
	unittests/$(DEPDIR)/all_tests-test_exp_vector.Po \
	unittests/$(DEPDIR)/all_tests-test_fork_exec.Po \
	unittests/$(DEPDIR)/all_tests-test_hash.Po \
	unittests/$(DEPDIR)/all_tests-test_heap.Po \
	unittests/$(DEPDIR)/all_tests-test_main.Po \
	unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Po \
	unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Po \
	unittests/$(DEPDIR)/all_tests-test_rbtree.Po \
	unittests/$(DEPDIR)/all_tests-test_read_parser.Po \
	unittests/$(DEPDIR)/all_tests-test_skip_list_map.Po \
	unittests/$(DEPDIR)/all_tests-test_skip_list_set.Po \
	unittests/$(DEPDIR)/all_tests-test_sr_names.Po \
	unittests/$(DEPDIR)/all_tests-test_thread_pool.Po \
	unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Po \
	unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libgtest_a_SOURCES) $(libgtest_main_a_SOURCES) \
	$(libutils_a_SOURCES) $(addSurrogatesToFrgCtgFile_SOURCES) \
	$(all_tests_SOURCES) $(bloom_query_SOURCES) \
	$(collectReadSequencesForLocalGapClosing_SOURCES) \
	$(createFastaSuperReadSequences_SOURCES) \
	$(createKUnitigMaxOverlaps_SOURCES) \
	$(create_k_unitigs_large_k_SOURCES) \
	$(create_k_unitigs_large_k2_SOURCES) $(create_sr_frg_SOURCES) \
	$(eliminateBadSuperReadsUsingList_SOURCES) \
	$(error_corrected2frg_SOURCES) \
	$(extendSuperReadsBasedOnUniqueExtensions_SOURCES) \
	$(extendSuperReadsForUniqueKmerNeighbors_SOURCES) \
	$(filter_overlap_file_SOURCES) \
	$(findMatchesBetweenKUnitigsAndReads_SOURCES) \
	$(getATBiasInCoverageForIllumina_v2_SOURCES) \
	$(getSuperReadInsertCountsFromReadPlacementFile_SOURCES) \
	$(getSuperReadInsertCountsFromReadPlacementFileTwoPasses_SOURCES) \
	$(homo_trim_SOURCES) $(joinKUnitigs_v3_SOURCES) \
	$(killBadKUnitigs_SOURCES) \
	$(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_SOURCES) \
	$(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_SOURCES) \
	$(outputRecordsNotOnList_SOURCES) $(reduce_sr_SOURCES) \
	$(rename_filter_fastq_SOURCES) $(reverse_complement_SOURCES) \
	$(runByDirectory_SOURCES) $(samToDelta_SOURCES) \
	$(sorted_merge_SOURCES) $(splitFileAtNs_SOURCES)
DIST_SOURCES = $(libgtest_a_SOURCES) $(libgtest_main_a_SOURCES) \
	$(libutils_a_SOURCES) $(addSurrogatesToFrgCtgFile_SOURCES) \
	$(all_tests_SOURCES) $(bloom_query_SOURCES) \
	$(collectReadSequencesForLocalGapClosing_SOURCES) \
	$(createFastaSuperReadSequences_SOURCES) \
	$(createKUnitigMaxOverlaps_SOURCES) \
	$(create_k_unitigs_large_k_SOURCES) \
	$(create_k_unitigs_large_k2_SOURCES) $(create_sr_frg_SOURCES) \
	$(eliminateBadSuperReadsUsingList_SOURCES) \
	$(error_corrected2frg_SOURCES) \
	$(extendSuperReadsBasedOnUniqueExtensions_SOURCES) \
	$(extendSuperReadsForUniqueKmerNeighbors_SOURCES) \
	$(filter_overlap_file_SOURCES) \
	$(findMatchesBetweenKUnitigsAndReads_SOURCES) \
	$(getATBiasInCoverageForIllumina_v2_SOURCES) \
	$(getSuperReadInsertCountsFromReadPlacementFile_SOURCES) \
	$(getSuperReadInsertCountsFromReadPlacementFileTwoPasses_SOURCES) \
	$(homo_trim_SOURCES) $(joinKUnitigs_v3_SOURCES) \
	$(killBadKUnitigs_SOURCES) \
	$(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_SOURCES) \
	$(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_SOURCES) \
	$(outputRecordsNotOnList_SOURCES) $(reduce_sr_SOURCES) \
	$(rename_filter_fastq_SOURCES) $(reverse_complement_SOURCES) \
	$(runByDirectory_SOURCES) $(samToDelta_SOURCES) \
	$(sorted_merge_SOURCES) $(splitFileAtNs_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(data_DATA)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/gtest.mk \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver AUTHORS \
	COPYING ChangeLog INSTALL NEWS README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALL_CXXFLAGS = @ALL_CXXFLAGS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_ROOT = @BOOST_ROOT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CURSES_LIB = @CURSES_LIB@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JELLYFISH = @JELLYFISH@
JELLYFISH2_0_CFLAGS = @JELLYFISH2_0_CFLAGS@
JELLYFISH2_0_LIBS = @JELLYFISH2_0_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOCAL_NAME = @LOCAL_NAME@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MACHINETYPE = @MACHINETYPE@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAYBE_SWIG = @MAYBE_SWIG@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OSTYPE = @OSTYPE@
OSVERSION = @OSVERSION@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PERL_EXT_CPPFLAGS = @PERL_EXT_CPPFLAGS@
PERL_EXT_INC = @PERL_EXT_INC@
PERL_EXT_LDFLAGS = @PERL_EXT_LDFLAGS@
PERL_EXT_LIB = @PERL_EXT_LIB@
PERL_EXT_PREFIX = @PERL_EXT_PREFIX@
RANLIB = @RANLIB@
SAMTOOLS_CFLAGS = @SAMTOOLS_CFLAGS@
SAMTOOLS_LIBS = @SAMTOOLS_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
VERSION = @VERSION@
YAGGO = @YAGGO@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I m4
CXXFLAGS_ALL = -I$(srcdir)/include -I$(srcdir) -Wall -std=c++0x $(VALGRIND_CFLAGS)
AM_CXXFLAGS = $(CXXFLAGS_ALL) $(JELLYFISH2_0_CFLAGS)
LDADD_ALL = -lrt -lpthread libutils.a
LDADD = $(LDADD_ALL) $(JELLYFISH2_0_LIBS)
AM_LDFLAGS = $(STATIC_FLAGS)
AM_DEV_CXXFLAGS = $(DEV_CXXFLAGS)
noinst_HEADERS = $(YAGGO_SOURCES) $(JFLIB_I)/multiplexed_io.hpp \
	$(JFLIB_I)/pool.hpp $(JFLIB_I)/multiplexed_parser.hpp \
	$(UTILS_I)/charb.hpp $(UTILS_I)/charbuf.hpp \
	$(UTILS_I)/exp_buffer.hpp $(UTILS_I)/gzip_stream.hpp \
	$(UTILS_I)/misc.hpp $(UTILS_I)/heap.hpp \
	$(UTILS_I)/reallocators.hpp $(UTILS_I)/skip_list_set.hpp \
	$(UTILS_I)/skip_list_map.hpp $(UTILS_I)/gcc_builtins.hpp \
	$(UTILS_I)/rb_tree.hpp $(UTILS_I)/rb_node.hpp \
	$(UTILS_I)/binary_search_tree_iterator.hpp \
	$(UTILS_I)/skip_list_common.hpp \
	$(UTILS_I)/multi_thread_skip_list_set.hpp \
	$(UTILS_I)/multi_thread_skip_list_map.hpp \
	$(UTILS_I)/tmpstream.hpp $(UTILS_I)/exp_vector.hpp \
	$(UTILS_I)/thread_pool.hpp $(UTILS_I)/fork_exec.hpp \
	src/aligned_simple_array.hpp src/diskBasedUnitigger.h \
	src/fibonacci_coding.hpp src/sr_names.hpp src/bloom_filter.hpp \
	src/MurmurHash3.h src/bloom_hash.hpp src/bloom_counter2.hpp \
	src/read_parser.hpp src/create_k_unitigs_common.hpp \
	unittests/test_main_cmdline.hpp unittests/misc.hpp \
	$(GTEST_I)/gtest-death-test.h $(GTEST_I)/gtest-message.h \
	$(GTEST_I)/gtest-param-test.h $(GTEST_I)/gtest-printers.h \
	$(GTEST_I)/gtest-spi.h $(GTEST_I)/gtest-test-part.h \
	$(GTEST_I)/gtest-typed-test.h $(GTEST_I)/gtest.h \
	$(GTEST_I)/gtest_pred_impl.h $(GTEST_I)/gtest_prod.h \
	$(GTEST_I)/internal/gtest-death-test-internal.h \
	$(GTEST_I)/internal/gtest-filepath.h \
	$(GTEST_I)/internal/gtest-internal.h \
	$(GTEST_I)/internal/gtest-linked_ptr.h \
	$(GTEST_I)/internal/gtest-param-util-generated.h \
	$(GTEST_I)/internal/gtest-param-util.h \
	$(GTEST_I)/internal/gtest-port.h \
	$(GTEST_I)/internal/gtest-string.h \
	$(GTEST_I)/internal/gtest-tuple.h \
	$(GTEST_I)/internal/gtest-type-util.h

##############################
# GC bias programs
##############################

##############################
# gap closing
##############################

##############################
# local gap closing
##############################
dist_bin_SCRIPTS = src/getNumBasesPerReadInFastaFile.perl \
	src/create_end_pairs.pl src/close_gaps.sh \
	src/compute_sr_cov.pl src/create_sr_frg.pl \
	src2/compute_sr_cov.revisedForGCContig.pl src/extractreads.pl \
	src/extract_unjoined_pairs.pl src/fasta2frg.pl \
	src/filter_library.sh src/fix_unitigs.sh \
	src/recompute_astat_superreads.sh src/runSRCA.pl \
	src/extractreads_not.pl src/run_ECR.sh src/filter_alt.pl \
	src/rename_filter_fastq.pl src/filter_redundancy.pl \
	src/expand_fastq src/sample_mate_pairs.pl src/fasta2frg_m.pl \
	src/splitFileByPrefix.pl src/restore_ns.pl \
	src/masurca-superreads src/splitLongKUnitigs.pl src/masurca \
	src/MasurcaConf.pm src/MasurcaCommon.pm src/MasurcaCelera.pm \
	src/MasurcaSoap.pm src/MasurcaSuperReads.pm \
	src2/getLengthStatisticsForKUnitigsFile.perl \
	src2/createSuperReadsForDirectory.perl \
	src2/add_missing_mates.pl \
	src2/outputAlekseysJellyfishReductionFile.perl \
	src2/translateReduceFile.perl src/mergeSuperReadsUniquely.pl \
	src2/closeGapsInScaffFastaFile.perl \
	src2/getGCBiasStatistics.perl src2/getSuperReadPlacements.perl \
	src2/getMeanAndStdevByGCCount.perl src2/closeGaps.perl \
	src2/getEndSequencesOfContigs.perl src2/create_end_pairs.perl \
	src2/outputJoinedPairs.perl src2/getSequenceForClosedGaps.perl \
	src2/closeGapsLocally.perl src2/closeGaps.oneDirectory.perl \
	src2/closeGaps.oneDirectory.fromMinKmerLen.perl \
	src2/extractJoinableAndNextPassReadsFromJoinKUnitigs.perl \
	src2/getSequenceForLocallyClosedGaps.perl \
	src2/getMeanAndStdevForGapsByGapNumUsingCeleraTerminatorDirectory.perl \
	src2/createSuperReadSequenceAndPlacementFileFromCombined.perl \
	src2/getMeanAndStdevForGapsByGapNumUsingCeleraAsmFile.perl \
	src2/addSurrogatesToFrgctg.perl \
	src2/getUnitigTypeFromAsmFile.perl

########################
# masurca script files #
########################
bin_SCRIPTS = src/MasurcaPaths.pm
data_DATA = 
BUILT_SOURCES = $(YAGGO_SOURCES)
CLEANFILES = src/MasurcaPaths.pm
DISTCLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = src/MasurcaPaths.pm.in $(TESTS) $(GTEST_SRC)

##############################
# jflib
##############################
JFLIB_I = include/jflib

##############################
# utils lib
##############################
UTILS_I = include
noinst_LIBRARIES = libutils.a
libutils_a_SOURCES = lib/fork_exec.cpp
# Yaggo automatic rules with silencing
V_YAGGO = $(V_YAGGO_$(V))
V_YAGGO_ = $(V_YAGGO_$(AM_DEFAULT_VERBOSITY))
V_YAGGO_0 = @echo "  YAGGO " $@;
YAGGO_SOURCES = src/error_corrected2frg_cmdline.hpp \
	src/reduce_sr_cmdline.hpp src/sorted_merge_cmdline.hpp \
	src/create_k_unitigs_large_k_cmdline.hpp \
	src/create_k_unitigs_large_k2_cmdline.hpp \
	src/bloom_query_cmdline.hpp \
	src/filter_overlap_file_cmdline.hpp \
	src/rename_filter_fastq_cmdline.hpp \
	src2/findMatchesBetweenKUnitigsAndReads_cmdline.hpp \
	src2/getSuperReadInsertCountsFromReadPlacementFile_cmdline.hpp \
	src2/getSuperReadInsertCountsFromReadPlacementFileTwoPasses_cmdline.hpp \
	src2/joinKUnitigs_v3_cmdline.hpp \
	src2/collectReadSequencesForLocalGapClosing_cmdline.hpp \
	src2/runByDirectory_cmdline.hpp \
	src2/extendSuperReadsForUniqueKmerNeighbors_cmdline.hpp \
	src2/extendSuperReadsBasedOnUniqueExtensions_cmdline.hpp \
	unittests/test_main_cmdline.hpp
homo_trim_SOURCES = src/homo_trim.cc
samToDelta_SOURCES = src/samToDelta.cpp
error_corrected2frg_SOURCES = src/error_corrected2frg.cc 
reverse_complement_SOURCES = src/reverse_complement.cc
#create_k_unitigs_SOURCES = src/create_k_unitigs.cpp
#YAGGO_SOURCES           += src/create_k_unitigs_cmdline.hpp
reduce_sr_SOURCES = src/reduce_sr.cc
sorted_merge_SOURCES = src/sorted_merge.cc
create_k_unitigs_large_k_SOURCES = src/create_k_unitigs_large_k.cc
create_k_unitigs_large_k2_SOURCES = src/create_k_unitigs_large_k2.cc
bloom_query_SOURCES = src/bloom_query.cc src/MurmurHash3.cpp
filter_overlap_file_SOURCES = src/filter_overlap_file.cc
rename_filter_fastq_SOURCES = src/rename_filter_fastq.cc
killBadKUnitigs_SOURCES = src2/killBadKUnitigs.cc
createFastaSuperReadSequences_SOURCES = src2/createFastaSuperReadSequences.cc
findMatchesBetweenKUnitigsAndReads_SOURCES = src/read_parser.cc				\
                                             src2/findMatchesBetweenKUnitigsAndReads.cc	\
                                             src/gcc_builtins.cc

create_sr_frg_SOURCES = src2/create_sr_frg.cc
createKUnitigMaxOverlaps_SOURCES = src2/createKUnitigMaxOverlaps.cc
eliminateBadSuperReadsUsingList_SOURCES = src2/eliminateBadSuperReadsUsingList.cc
getSuperReadInsertCountsFromReadPlacementFile_SOURCES = \
src2/getSuperReadInsertCountsFromReadPlacementFile.cc	\
src/fibonacci_coding.cc src/MurmurHash3.cpp

getSuperReadInsertCountsFromReadPlacementFileTwoPasses_SOURCES = \
src2/getSuperReadInsertCountsFromReadPlacementFileTwoPasses.cc		\
src/fibonacci_coding.cc src/MurmurHash3.cpp

joinKUnitigs_v3_SOURCES = src2/joinKUnitigs_v3.cc
outputRecordsNotOnList_SOURCES = src2/outputRecordsNotOnList.cc
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_SOURCES = src2/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC.cc
makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_SOURCES = src2/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2.cc
splitFileAtNs_SOURCES = src2/splitFileAtNs.cc
getATBiasInCoverageForIllumina_v2_SOURCES = src2/getATBiasInCoverageForIllumina_v2.cc
collectReadSequencesForLocalGapClosing_SOURCES = src2/collectReadSequencesForLocalGapClosing.cc
runByDirectory_SOURCES = src2/runByDirectory.cc
extendSuperReadsForUniqueKmerNeighbors_SOURCES = src2/extendSuperReadsForUniqueKmerNeighbors.cc
extendSuperReadsBasedOnUniqueExtensions_SOURCES = src2/extendSuperReadsBasedOnUniqueExtensions.cc
addSurrogatesToFrgCtgFile_SOURCES = src2/addSurrogatesToFrgCtgFile.cc
all_tests_SOURCES = unittests/test_main.cc unittests/test_charb.cc \
	unittests/test_exp_buffer.cc unittests/test_charbuf.cc \
	unittests/test_heap.cc unittests/test_sr_names.cc \
	unittests/test_bloom_filter.cc \
	unittests/test_bloom_counter2.cc \
	unittests/test_skip_list_set.cc \
	unittests/test_skip_list_map.cc unittests/test_rbtree.cc \
	unittests/test_multi_thread_skip_list_set.cc \
	unittests/test_multi_thread_skip_list_map.cc \
	unittests/test_read_parser.cc unittests/test_hash.cc \
	unittests/test_exp_vector.cc unittests/test_thread_pool.cc \
	unittests/test_fork_exec.cc src/fibonacci_coding.cc \
	src/MurmurHash3.cpp src/gcc_builtins.cc src/read_parser.cc \
	unittests/misc.cc
all_tests_CXXFLAGS = $(AM_CXXFLAGS) $(JELLYFISH2_0_CFLAGS)	\
-I$(srcdir)/unittests/gtest/include				\
-I$(srcdir)unittests/gtest -I$(srcdir)/include		\
-I$(srcdir)

all_tests_LDFLAGS = $(AM_LDFLAGS) $(JELLYFISH2_0_LIBS)
all_tests_LDADD = libutils.a libgtest.a
check_LIBRARIES = libgtest.a libgtest_main.a
libgtest_a_SOURCES = unittests/gtest/src/gtest-all.cc
libgtest_main_a_SOURCES = unittests/gtest/src/gtest_main.cc
libgtest_main_a_LIBADD = libgtest.a
libgtest_a_CXXFLAGS = -I$(srcdir)/unittests/gtest	\
-I$(srcdir)/unittests/gtest/include

libgtest_main_a_CXXFLAGS = -I$(srcdir)/unittests/gtest	\
-I$(srcdir)/unittests/gtest/include


# gtest source files that we don't compile directly.  They are
# #included by gtest-all.cc.
GTEST_SRC = unittests/gtest/src/gtest-death-test.cc	\
	    unittests/gtest/src/gtest-filepath.cc	\
	    unittests/gtest/src/gtest-internal-inl.h	\
	    unittests/gtest/src/gtest-port.cc		\
	    unittests/gtest/src/gtest-printers.cc	\
	    unittests/gtest/src/gtest-test-part.cc	\
	    unittests/gtest/src/gtest-typed-test.cc	\
	    unittests/gtest/src/gtest.cc


# Headers, not installed
GTEST_I = unittests/gtest/include/gtest
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .hpp .lo .log .o .obj .test .test$(EXEEXT) .trs .yaggo
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/gtest.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign SuperReads/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign SuperReads/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/gtest.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkLIBRARIES:
	-test -z "$(check_LIBRARIES)" || rm -f $(check_LIBRARIES)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
unittests/gtest/src/$(am__dirstamp):
	@$(MKDIR_P) unittests/gtest/src
	@: > unittests/gtest/src/$(am__dirstamp)
unittests/gtest/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unittests/gtest/src/$(DEPDIR)
	@: > unittests/gtest/src/$(DEPDIR)/$(am__dirstamp)
unittests/gtest/src/libgtest_a-gtest-all.$(OBJEXT):  \
	unittests/gtest/src/$(am__dirstamp) \
	unittests/gtest/src/$(DEPDIR)/$(am__dirstamp)

libgtest.a: $(libgtest_a_OBJECTS) $(libgtest_a_DEPENDENCIES) $(EXTRA_libgtest_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgtest.a
	$(AM_V_AR)$(libgtest_a_AR) libgtest.a $(libgtest_a_OBJECTS) $(libgtest_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgtest.a
unittests/gtest/src/libgtest_main_a-gtest_main.$(OBJEXT):  \
	unittests/gtest/src/$(am__dirstamp) \
	unittests/gtest/src/$(DEPDIR)/$(am__dirstamp)

libgtest_main.a: $(libgtest_main_a_OBJECTS) $(libgtest_main_a_DEPENDENCIES) $(EXTRA_libgtest_main_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgtest_main.a
	$(AM_V_AR)$(libgtest_main_a_AR) libgtest_main.a $(libgtest_main_a_OBJECTS) $(libgtest_main_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgtest_main.a
lib/$(am__dirstamp):
	@$(MKDIR_P) lib
	@: > lib/$(am__dirstamp)
lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lib/$(DEPDIR)
	@: > lib/$(DEPDIR)/$(am__dirstamp)
lib/fork_exec.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)

libutils.a: $(libutils_a_OBJECTS) $(libutils_a_DEPENDENCIES) $(EXTRA_libutils_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libutils.a
	$(AM_V_AR)$(libutils_a_AR) libutils.a $(libutils_a_OBJECTS) $(libutils_a_LIBADD)
	$(AM_V_at)$(RANLIB) libutils.a
src2/$(am__dirstamp):
	@$(MKDIR_P) src2
	@: > src2/$(am__dirstamp)
src2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src2/$(DEPDIR)
	@: > src2/$(DEPDIR)/$(am__dirstamp)
src2/addSurrogatesToFrgCtgFile.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

addSurrogatesToFrgCtgFile$(EXEEXT): $(addSurrogatesToFrgCtgFile_OBJECTS) $(addSurrogatesToFrgCtgFile_DEPENDENCIES) $(EXTRA_addSurrogatesToFrgCtgFile_DEPENDENCIES) 
	@rm -f addSurrogatesToFrgCtgFile$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(addSurrogatesToFrgCtgFile_OBJECTS) $(addSurrogatesToFrgCtgFile_LDADD) $(LIBS)
unittests/$(am__dirstamp):
	@$(MKDIR_P) unittests
	@: > unittests/$(am__dirstamp)
unittests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unittests/$(DEPDIR)
	@: > unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_main.$(OBJEXT): unittests/$(am__dirstamp) \
	unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_charb.$(OBJEXT): unittests/$(am__dirstamp) \
	unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_exp_buffer.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_charbuf.$(OBJEXT): unittests/$(am__dirstamp) \
	unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_heap.$(OBJEXT): unittests/$(am__dirstamp) \
	unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_sr_names.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_bloom_filter.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_bloom_counter2.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_skip_list_set.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_skip_list_map.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_rbtree.$(OBJEXT): unittests/$(am__dirstamp) \
	unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_multi_thread_skip_list_set.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_multi_thread_skip_list_map.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_read_parser.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_hash.$(OBJEXT): unittests/$(am__dirstamp) \
	unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_exp_vector.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_thread_pool.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-test_fork_exec.$(OBJEXT):  \
	unittests/$(am__dirstamp) unittests/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/all_tests-fibonacci_coding.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/all_tests-MurmurHash3.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/all_tests-gcc_builtins.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/all_tests-read_parser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
unittests/all_tests-misc.$(OBJEXT): unittests/$(am__dirstamp) \
	unittests/$(DEPDIR)/$(am__dirstamp)

all_tests$(EXEEXT): $(all_tests_OBJECTS) $(all_tests_DEPENDENCIES) $(EXTRA_all_tests_DEPENDENCIES) 
	@rm -f all_tests$(EXEEXT)
	$(AM_V_CXXLD)$(all_tests_LINK) $(all_tests_OBJECTS) $(all_tests_LDADD) $(LIBS)
src/bloom_query.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/MurmurHash3.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

bloom_query$(EXEEXT): $(bloom_query_OBJECTS) $(bloom_query_DEPENDENCIES) $(EXTRA_bloom_query_DEPENDENCIES) 
	@rm -f bloom_query$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bloom_query_OBJECTS) $(bloom_query_LDADD) $(LIBS)
src2/collectReadSequencesForLocalGapClosing.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)

collectReadSequencesForLocalGapClosing$(EXEEXT): $(collectReadSequencesForLocalGapClosing_OBJECTS) $(collectReadSequencesForLocalGapClosing_DEPENDENCIES) $(EXTRA_collectReadSequencesForLocalGapClosing_DEPENDENCIES) 
	@rm -f collectReadSequencesForLocalGapClosing$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(collectReadSequencesForLocalGapClosing_OBJECTS) $(collectReadSequencesForLocalGapClosing_LDADD) $(LIBS)
src2/createFastaSuperReadSequences.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

createFastaSuperReadSequences$(EXEEXT): $(createFastaSuperReadSequences_OBJECTS) $(createFastaSuperReadSequences_DEPENDENCIES) $(EXTRA_createFastaSuperReadSequences_DEPENDENCIES) 
	@rm -f createFastaSuperReadSequences$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(createFastaSuperReadSequences_OBJECTS) $(createFastaSuperReadSequences_LDADD) $(LIBS)
src2/createKUnitigMaxOverlaps.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

createKUnitigMaxOverlaps$(EXEEXT): $(createKUnitigMaxOverlaps_OBJECTS) $(createKUnitigMaxOverlaps_DEPENDENCIES) $(EXTRA_createKUnitigMaxOverlaps_DEPENDENCIES) 
	@rm -f createKUnitigMaxOverlaps$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(createKUnitigMaxOverlaps_OBJECTS) $(createKUnitigMaxOverlaps_LDADD) $(LIBS)
src/create_k_unitigs_large_k.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

create_k_unitigs_large_k$(EXEEXT): $(create_k_unitigs_large_k_OBJECTS) $(create_k_unitigs_large_k_DEPENDENCIES) $(EXTRA_create_k_unitigs_large_k_DEPENDENCIES) 
	@rm -f create_k_unitigs_large_k$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(create_k_unitigs_large_k_OBJECTS) $(create_k_unitigs_large_k_LDADD) $(LIBS)
src/create_k_unitigs_large_k2.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

create_k_unitigs_large_k2$(EXEEXT): $(create_k_unitigs_large_k2_OBJECTS) $(create_k_unitigs_large_k2_DEPENDENCIES) $(EXTRA_create_k_unitigs_large_k2_DEPENDENCIES) 
	@rm -f create_k_unitigs_large_k2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(create_k_unitigs_large_k2_OBJECTS) $(create_k_unitigs_large_k2_LDADD) $(LIBS)
src2/create_sr_frg.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

create_sr_frg$(EXEEXT): $(create_sr_frg_OBJECTS) $(create_sr_frg_DEPENDENCIES) $(EXTRA_create_sr_frg_DEPENDENCIES) 
	@rm -f create_sr_frg$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(create_sr_frg_OBJECTS) $(create_sr_frg_LDADD) $(LIBS)
src2/eliminateBadSuperReadsUsingList.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

eliminateBadSuperReadsUsingList$(EXEEXT): $(eliminateBadSuperReadsUsingList_OBJECTS) $(eliminateBadSuperReadsUsingList_DEPENDENCIES) $(EXTRA_eliminateBadSuperReadsUsingList_DEPENDENCIES) 
	@rm -f eliminateBadSuperReadsUsingList$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eliminateBadSuperReadsUsingList_OBJECTS) $(eliminateBadSuperReadsUsingList_LDADD) $(LIBS)
src/error_corrected2frg.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

error_corrected2frg$(EXEEXT): $(error_corrected2frg_OBJECTS) $(error_corrected2frg_DEPENDENCIES) $(EXTRA_error_corrected2frg_DEPENDENCIES) 
	@rm -f error_corrected2frg$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(error_corrected2frg_OBJECTS) $(error_corrected2frg_LDADD) $(LIBS)
src2/extendSuperReadsBasedOnUniqueExtensions.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)

extendSuperReadsBasedOnUniqueExtensions$(EXEEXT): $(extendSuperReadsBasedOnUniqueExtensions_OBJECTS) $(extendSuperReadsBasedOnUniqueExtensions_DEPENDENCIES) $(EXTRA_extendSuperReadsBasedOnUniqueExtensions_DEPENDENCIES) 
	@rm -f extendSuperReadsBasedOnUniqueExtensions$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(extendSuperReadsBasedOnUniqueExtensions_OBJECTS) $(extendSuperReadsBasedOnUniqueExtensions_LDADD) $(LIBS)
src2/extendSuperReadsForUniqueKmerNeighbors.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)

extendSuperReadsForUniqueKmerNeighbors$(EXEEXT): $(extendSuperReadsForUniqueKmerNeighbors_OBJECTS) $(extendSuperReadsForUniqueKmerNeighbors_DEPENDENCIES) $(EXTRA_extendSuperReadsForUniqueKmerNeighbors_DEPENDENCIES) 
	@rm -f extendSuperReadsForUniqueKmerNeighbors$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(extendSuperReadsForUniqueKmerNeighbors_OBJECTS) $(extendSuperReadsForUniqueKmerNeighbors_LDADD) $(LIBS)
src/filter_overlap_file.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

filter_overlap_file$(EXEEXT): $(filter_overlap_file_OBJECTS) $(filter_overlap_file_DEPENDENCIES) $(EXTRA_filter_overlap_file_DEPENDENCIES) 
	@rm -f filter_overlap_file$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(filter_overlap_file_OBJECTS) $(filter_overlap_file_LDADD) $(LIBS)
src/read_parser.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src2/findMatchesBetweenKUnitigsAndReads.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)
src/gcc_builtins.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

findMatchesBetweenKUnitigsAndReads$(EXEEXT): $(findMatchesBetweenKUnitigsAndReads_OBJECTS) $(findMatchesBetweenKUnitigsAndReads_DEPENDENCIES) $(EXTRA_findMatchesBetweenKUnitigsAndReads_DEPENDENCIES) 
	@rm -f findMatchesBetweenKUnitigsAndReads$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(findMatchesBetweenKUnitigsAndReads_OBJECTS) $(findMatchesBetweenKUnitigsAndReads_LDADD) $(LIBS)
src2/getATBiasInCoverageForIllumina_v2.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)

getATBiasInCoverageForIllumina_v2$(EXEEXT): $(getATBiasInCoverageForIllumina_v2_OBJECTS) $(getATBiasInCoverageForIllumina_v2_DEPENDENCIES) $(EXTRA_getATBiasInCoverageForIllumina_v2_DEPENDENCIES) 
	@rm -f getATBiasInCoverageForIllumina_v2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(getATBiasInCoverageForIllumina_v2_OBJECTS) $(getATBiasInCoverageForIllumina_v2_LDADD) $(LIBS)
src2/getSuperReadInsertCountsFromReadPlacementFile.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)
src/fibonacci_coding.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

getSuperReadInsertCountsFromReadPlacementFile$(EXEEXT): $(getSuperReadInsertCountsFromReadPlacementFile_OBJECTS) $(getSuperReadInsertCountsFromReadPlacementFile_DEPENDENCIES) $(EXTRA_getSuperReadInsertCountsFromReadPlacementFile_DEPENDENCIES) 
	@rm -f getSuperReadInsertCountsFromReadPlacementFile$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(getSuperReadInsertCountsFromReadPlacementFile_OBJECTS) $(getSuperReadInsertCountsFromReadPlacementFile_LDADD) $(LIBS)
src2/getSuperReadInsertCountsFromReadPlacementFileTwoPasses.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)

getSuperReadInsertCountsFromReadPlacementFileTwoPasses$(EXEEXT): $(getSuperReadInsertCountsFromReadPlacementFileTwoPasses_OBJECTS) $(getSuperReadInsertCountsFromReadPlacementFileTwoPasses_DEPENDENCIES) $(EXTRA_getSuperReadInsertCountsFromReadPlacementFileTwoPasses_DEPENDENCIES) 
	@rm -f getSuperReadInsertCountsFromReadPlacementFileTwoPasses$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(getSuperReadInsertCountsFromReadPlacementFileTwoPasses_OBJECTS) $(getSuperReadInsertCountsFromReadPlacementFileTwoPasses_LDADD) $(LIBS)
src/homo_trim.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

homo_trim$(EXEEXT): $(homo_trim_OBJECTS) $(homo_trim_DEPENDENCIES) $(EXTRA_homo_trim_DEPENDENCIES) 
	@rm -f homo_trim$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(homo_trim_OBJECTS) $(homo_trim_LDADD) $(LIBS)
src2/joinKUnitigs_v3.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

joinKUnitigs_v3$(EXEEXT): $(joinKUnitigs_v3_OBJECTS) $(joinKUnitigs_v3_DEPENDENCIES) $(EXTRA_joinKUnitigs_v3_DEPENDENCIES) 
	@rm -f joinKUnitigs_v3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(joinKUnitigs_v3_OBJECTS) $(joinKUnitigs_v3_LDADD) $(LIBS)
src2/killBadKUnitigs.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

killBadKUnitigs$(EXEEXT): $(killBadKUnitigs_OBJECTS) $(killBadKUnitigs_DEPENDENCIES) $(EXTRA_killBadKUnitigs_DEPENDENCIES) 
	@rm -f killBadKUnitigs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(killBadKUnitigs_OBJECTS) $(killBadKUnitigs_LDADD) $(LIBS)
src2/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)

makeAdjustmentFactorsForNumReadsForAStatBasedOnGC$(EXEEXT): $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_OBJECTS) $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_DEPENDENCIES) $(EXTRA_makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_DEPENDENCIES) 
	@rm -f makeAdjustmentFactorsForNumReadsForAStatBasedOnGC$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_OBJECTS) $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_LDADD) $(LIBS)
src2/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2.$(OBJEXT):  \
	src2/$(am__dirstamp) src2/$(DEPDIR)/$(am__dirstamp)

makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2$(EXEEXT): $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_OBJECTS) $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_DEPENDENCIES) $(EXTRA_makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_DEPENDENCIES) 
	@rm -f makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_OBJECTS) $(makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2_LDADD) $(LIBS)
src2/outputRecordsNotOnList.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

outputRecordsNotOnList$(EXEEXT): $(outputRecordsNotOnList_OBJECTS) $(outputRecordsNotOnList_DEPENDENCIES) $(EXTRA_outputRecordsNotOnList_DEPENDENCIES) 
	@rm -f outputRecordsNotOnList$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(outputRecordsNotOnList_OBJECTS) $(outputRecordsNotOnList_LDADD) $(LIBS)
src/reduce_sr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

reduce_sr$(EXEEXT): $(reduce_sr_OBJECTS) $(reduce_sr_DEPENDENCIES) $(EXTRA_reduce_sr_DEPENDENCIES) 
	@rm -f reduce_sr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reduce_sr_OBJECTS) $(reduce_sr_LDADD) $(LIBS)
src/rename_filter_fastq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

rename_filter_fastq$(EXEEXT): $(rename_filter_fastq_OBJECTS) $(rename_filter_fastq_DEPENDENCIES) $(EXTRA_rename_filter_fastq_DEPENDENCIES) 
	@rm -f rename_filter_fastq$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rename_filter_fastq_OBJECTS) $(rename_filter_fastq_LDADD) $(LIBS)
src/reverse_complement.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

reverse_complement$(EXEEXT): $(reverse_complement_OBJECTS) $(reverse_complement_DEPENDENCIES) $(EXTRA_reverse_complement_DEPENDENCIES) 
	@rm -f reverse_complement$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reverse_complement_OBJECTS) $(reverse_complement_LDADD) $(LIBS)
src2/runByDirectory.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

runByDirectory$(EXEEXT): $(runByDirectory_OBJECTS) $(runByDirectory_DEPENDENCIES) $(EXTRA_runByDirectory_DEPENDENCIES) 
	@rm -f runByDirectory$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(runByDirectory_OBJECTS) $(runByDirectory_LDADD) $(LIBS)
src/samToDelta.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

samToDelta$(EXEEXT): $(samToDelta_OBJECTS) $(samToDelta_DEPENDENCIES) $(EXTRA_samToDelta_DEPENDENCIES) 
	@rm -f samToDelta$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(samToDelta_OBJECTS) $(samToDelta_LDADD) $(LIBS)
src/sorted_merge.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

sorted_merge$(EXEEXT): $(sorted_merge_OBJECTS) $(sorted_merge_DEPENDENCIES) $(EXTRA_sorted_merge_DEPENDENCIES) 
	@rm -f sorted_merge$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sorted_merge_OBJECTS) $(sorted_merge_LDADD) $(LIBS)
src2/splitFileAtNs.$(OBJEXT): src2/$(am__dirstamp) \
	src2/$(DEPDIR)/$(am__dirstamp)

splitFileAtNs$(EXEEXT): $(splitFileAtNs_OBJECTS) $(splitFileAtNs_DEPENDENCIES) $(EXTRA_splitFileAtNs_DEPENDENCIES) 
	@rm -f splitFileAtNs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(splitFileAtNs_OBJECTS) $(splitFileAtNs_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f lib/*.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src2/*.$(OBJEXT)
	-rm -f unittests/*.$(OBJEXT)
	-rm -f unittests/gtest/src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@lib/$(DEPDIR)/fork_exec.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/MurmurHash3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/all_tests-MurmurHash3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/all_tests-fibonacci_coding.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/all_tests-gcc_builtins.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/all_tests-read_parser.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bloom_query.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/create_k_unitigs_large_k.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/create_k_unitigs_large_k2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/error_corrected2frg.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/fibonacci_coding.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/filter_overlap_file.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/gcc_builtins.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/homo_trim.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/read_parser.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/reduce_sr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/rename_filter_fastq.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/reverse_complement.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/samToDelta.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sorted_merge.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/addSurrogatesToFrgCtgFile.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/collectReadSequencesForLocalGapClosing.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/createFastaSuperReadSequences.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/createKUnitigMaxOverlaps.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/create_sr_frg.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/eliminateBadSuperReadsUsingList.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/extendSuperReadsBasedOnUniqueExtensions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/extendSuperReadsForUniqueKmerNeighbors.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/findMatchesBetweenKUnitigsAndReads.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/getATBiasInCoverageForIllumina_v2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFile.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFileTwoPasses.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/joinKUnitigs_v3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/killBadKUnitigs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/outputRecordsNotOnList.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/runByDirectory.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@src2/$(DEPDIR)/splitFileAtNs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-misc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_bloom_filter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_charb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_charbuf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_exp_buffer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_exp_vector.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_fork_exec.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_heap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_rbtree.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_read_parser.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_skip_list_map.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_skip_list_set.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_sr_names.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/$(DEPDIR)/all_tests-test_thread_pool.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

unittests/gtest/src/libgtest_a-gtest-all.o: unittests/gtest/src/gtest-all.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_a_CXXFLAGS) $(CXXFLAGS) -MT unittests/gtest/src/libgtest_a-gtest-all.o -MD -MP -MF unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Tpo -c -o unittests/gtest/src/libgtest_a-gtest-all.o `test -f 'unittests/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`unittests/gtest/src/gtest-all.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Tpo unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/gtest/src/gtest-all.cc' object='unittests/gtest/src/libgtest_a-gtest-all.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_a_CXXFLAGS) $(CXXFLAGS) -c -o unittests/gtest/src/libgtest_a-gtest-all.o `test -f 'unittests/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`unittests/gtest/src/gtest-all.cc

unittests/gtest/src/libgtest_a-gtest-all.obj: unittests/gtest/src/gtest-all.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_a_CXXFLAGS) $(CXXFLAGS) -MT unittests/gtest/src/libgtest_a-gtest-all.obj -MD -MP -MF unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Tpo -c -o unittests/gtest/src/libgtest_a-gtest-all.obj `if test -f 'unittests/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'unittests/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/gtest/src/gtest-all.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Tpo unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/gtest/src/gtest-all.cc' object='unittests/gtest/src/libgtest_a-gtest-all.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_a_CXXFLAGS) $(CXXFLAGS) -c -o unittests/gtest/src/libgtest_a-gtest-all.obj `if test -f 'unittests/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'unittests/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/gtest/src/gtest-all.cc'; fi`

unittests/gtest/src/libgtest_main_a-gtest_main.o: unittests/gtest/src/gtest_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_main_a_CXXFLAGS) $(CXXFLAGS) -MT unittests/gtest/src/libgtest_main_a-gtest_main.o -MD -MP -MF unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Tpo -c -o unittests/gtest/src/libgtest_main_a-gtest_main.o `test -f 'unittests/gtest/src/gtest_main.cc' || echo '$(srcdir)/'`unittests/gtest/src/gtest_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Tpo unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/gtest/src/gtest_main.cc' object='unittests/gtest/src/libgtest_main_a-gtest_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_main_a_CXXFLAGS) $(CXXFLAGS) -c -o unittests/gtest/src/libgtest_main_a-gtest_main.o `test -f 'unittests/gtest/src/gtest_main.cc' || echo '$(srcdir)/'`unittests/gtest/src/gtest_main.cc

unittests/gtest/src/libgtest_main_a-gtest_main.obj: unittests/gtest/src/gtest_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_main_a_CXXFLAGS) $(CXXFLAGS) -MT unittests/gtest/src/libgtest_main_a-gtest_main.obj -MD -MP -MF unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Tpo -c -o unittests/gtest/src/libgtest_main_a-gtest_main.obj `if test -f 'unittests/gtest/src/gtest_main.cc'; then $(CYGPATH_W) 'unittests/gtest/src/gtest_main.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/gtest/src/gtest_main.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Tpo unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/gtest/src/gtest_main.cc' object='unittests/gtest/src/libgtest_main_a-gtest_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_main_a_CXXFLAGS) $(CXXFLAGS) -c -o unittests/gtest/src/libgtest_main_a-gtest_main.obj `if test -f 'unittests/gtest/src/gtest_main.cc'; then $(CYGPATH_W) 'unittests/gtest/src/gtest_main.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/gtest/src/gtest_main.cc'; fi`

unittests/all_tests-test_main.o: unittests/test_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_main.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_main.Tpo -c -o unittests/all_tests-test_main.o `test -f 'unittests/test_main.cc' || echo '$(srcdir)/'`unittests/test_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_main.Tpo unittests/$(DEPDIR)/all_tests-test_main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_main.cc' object='unittests/all_tests-test_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_main.o `test -f 'unittests/test_main.cc' || echo '$(srcdir)/'`unittests/test_main.cc

unittests/all_tests-test_main.obj: unittests/test_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_main.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_main.Tpo -c -o unittests/all_tests-test_main.obj `if test -f 'unittests/test_main.cc'; then $(CYGPATH_W) 'unittests/test_main.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_main.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_main.Tpo unittests/$(DEPDIR)/all_tests-test_main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_main.cc' object='unittests/all_tests-test_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_main.obj `if test -f 'unittests/test_main.cc'; then $(CYGPATH_W) 'unittests/test_main.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_main.cc'; fi`

unittests/all_tests-test_charb.o: unittests/test_charb.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_charb.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_charb.Tpo -c -o unittests/all_tests-test_charb.o `test -f 'unittests/test_charb.cc' || echo '$(srcdir)/'`unittests/test_charb.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_charb.Tpo unittests/$(DEPDIR)/all_tests-test_charb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_charb.cc' object='unittests/all_tests-test_charb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_charb.o `test -f 'unittests/test_charb.cc' || echo '$(srcdir)/'`unittests/test_charb.cc

unittests/all_tests-test_charb.obj: unittests/test_charb.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_charb.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_charb.Tpo -c -o unittests/all_tests-test_charb.obj `if test -f 'unittests/test_charb.cc'; then $(CYGPATH_W) 'unittests/test_charb.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_charb.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_charb.Tpo unittests/$(DEPDIR)/all_tests-test_charb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_charb.cc' object='unittests/all_tests-test_charb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_charb.obj `if test -f 'unittests/test_charb.cc'; then $(CYGPATH_W) 'unittests/test_charb.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_charb.cc'; fi`

unittests/all_tests-test_exp_buffer.o: unittests/test_exp_buffer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_exp_buffer.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_exp_buffer.Tpo -c -o unittests/all_tests-test_exp_buffer.o `test -f 'unittests/test_exp_buffer.cc' || echo '$(srcdir)/'`unittests/test_exp_buffer.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_exp_buffer.Tpo unittests/$(DEPDIR)/all_tests-test_exp_buffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_exp_buffer.cc' object='unittests/all_tests-test_exp_buffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_exp_buffer.o `test -f 'unittests/test_exp_buffer.cc' || echo '$(srcdir)/'`unittests/test_exp_buffer.cc

unittests/all_tests-test_exp_buffer.obj: unittests/test_exp_buffer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_exp_buffer.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_exp_buffer.Tpo -c -o unittests/all_tests-test_exp_buffer.obj `if test -f 'unittests/test_exp_buffer.cc'; then $(CYGPATH_W) 'unittests/test_exp_buffer.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_exp_buffer.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_exp_buffer.Tpo unittests/$(DEPDIR)/all_tests-test_exp_buffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_exp_buffer.cc' object='unittests/all_tests-test_exp_buffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_exp_buffer.obj `if test -f 'unittests/test_exp_buffer.cc'; then $(CYGPATH_W) 'unittests/test_exp_buffer.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_exp_buffer.cc'; fi`

unittests/all_tests-test_charbuf.o: unittests/test_charbuf.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_charbuf.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_charbuf.Tpo -c -o unittests/all_tests-test_charbuf.o `test -f 'unittests/test_charbuf.cc' || echo '$(srcdir)/'`unittests/test_charbuf.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_charbuf.Tpo unittests/$(DEPDIR)/all_tests-test_charbuf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_charbuf.cc' object='unittests/all_tests-test_charbuf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_charbuf.o `test -f 'unittests/test_charbuf.cc' || echo '$(srcdir)/'`unittests/test_charbuf.cc

unittests/all_tests-test_charbuf.obj: unittests/test_charbuf.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_charbuf.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_charbuf.Tpo -c -o unittests/all_tests-test_charbuf.obj `if test -f 'unittests/test_charbuf.cc'; then $(CYGPATH_W) 'unittests/test_charbuf.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_charbuf.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_charbuf.Tpo unittests/$(DEPDIR)/all_tests-test_charbuf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_charbuf.cc' object='unittests/all_tests-test_charbuf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_charbuf.obj `if test -f 'unittests/test_charbuf.cc'; then $(CYGPATH_W) 'unittests/test_charbuf.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_charbuf.cc'; fi`

unittests/all_tests-test_heap.o: unittests/test_heap.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_heap.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_heap.Tpo -c -o unittests/all_tests-test_heap.o `test -f 'unittests/test_heap.cc' || echo '$(srcdir)/'`unittests/test_heap.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_heap.Tpo unittests/$(DEPDIR)/all_tests-test_heap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_heap.cc' object='unittests/all_tests-test_heap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_heap.o `test -f 'unittests/test_heap.cc' || echo '$(srcdir)/'`unittests/test_heap.cc

unittests/all_tests-test_heap.obj: unittests/test_heap.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_heap.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_heap.Tpo -c -o unittests/all_tests-test_heap.obj `if test -f 'unittests/test_heap.cc'; then $(CYGPATH_W) 'unittests/test_heap.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_heap.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_heap.Tpo unittests/$(DEPDIR)/all_tests-test_heap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_heap.cc' object='unittests/all_tests-test_heap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_heap.obj `if test -f 'unittests/test_heap.cc'; then $(CYGPATH_W) 'unittests/test_heap.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_heap.cc'; fi`

unittests/all_tests-test_sr_names.o: unittests/test_sr_names.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_sr_names.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_sr_names.Tpo -c -o unittests/all_tests-test_sr_names.o `test -f 'unittests/test_sr_names.cc' || echo '$(srcdir)/'`unittests/test_sr_names.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_sr_names.Tpo unittests/$(DEPDIR)/all_tests-test_sr_names.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_sr_names.cc' object='unittests/all_tests-test_sr_names.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_sr_names.o `test -f 'unittests/test_sr_names.cc' || echo '$(srcdir)/'`unittests/test_sr_names.cc

unittests/all_tests-test_sr_names.obj: unittests/test_sr_names.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_sr_names.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_sr_names.Tpo -c -o unittests/all_tests-test_sr_names.obj `if test -f 'unittests/test_sr_names.cc'; then $(CYGPATH_W) 'unittests/test_sr_names.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_sr_names.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_sr_names.Tpo unittests/$(DEPDIR)/all_tests-test_sr_names.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_sr_names.cc' object='unittests/all_tests-test_sr_names.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_sr_names.obj `if test -f 'unittests/test_sr_names.cc'; then $(CYGPATH_W) 'unittests/test_sr_names.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_sr_names.cc'; fi`

unittests/all_tests-test_bloom_filter.o: unittests/test_bloom_filter.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_bloom_filter.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_bloom_filter.Tpo -c -o unittests/all_tests-test_bloom_filter.o `test -f 'unittests/test_bloom_filter.cc' || echo '$(srcdir)/'`unittests/test_bloom_filter.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_bloom_filter.Tpo unittests/$(DEPDIR)/all_tests-test_bloom_filter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_bloom_filter.cc' object='unittests/all_tests-test_bloom_filter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_bloom_filter.o `test -f 'unittests/test_bloom_filter.cc' || echo '$(srcdir)/'`unittests/test_bloom_filter.cc

unittests/all_tests-test_bloom_filter.obj: unittests/test_bloom_filter.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_bloom_filter.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_bloom_filter.Tpo -c -o unittests/all_tests-test_bloom_filter.obj `if test -f 'unittests/test_bloom_filter.cc'; then $(CYGPATH_W) 'unittests/test_bloom_filter.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_bloom_filter.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_bloom_filter.Tpo unittests/$(DEPDIR)/all_tests-test_bloom_filter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_bloom_filter.cc' object='unittests/all_tests-test_bloom_filter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_bloom_filter.obj `if test -f 'unittests/test_bloom_filter.cc'; then $(CYGPATH_W) 'unittests/test_bloom_filter.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_bloom_filter.cc'; fi`

unittests/all_tests-test_bloom_counter2.o: unittests/test_bloom_counter2.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_bloom_counter2.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Tpo -c -o unittests/all_tests-test_bloom_counter2.o `test -f 'unittests/test_bloom_counter2.cc' || echo '$(srcdir)/'`unittests/test_bloom_counter2.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Tpo unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_bloom_counter2.cc' object='unittests/all_tests-test_bloom_counter2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_bloom_counter2.o `test -f 'unittests/test_bloom_counter2.cc' || echo '$(srcdir)/'`unittests/test_bloom_counter2.cc

unittests/all_tests-test_bloom_counter2.obj: unittests/test_bloom_counter2.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_bloom_counter2.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Tpo -c -o unittests/all_tests-test_bloom_counter2.obj `if test -f 'unittests/test_bloom_counter2.cc'; then $(CYGPATH_W) 'unittests/test_bloom_counter2.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_bloom_counter2.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Tpo unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_bloom_counter2.cc' object='unittests/all_tests-test_bloom_counter2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_bloom_counter2.obj `if test -f 'unittests/test_bloom_counter2.cc'; then $(CYGPATH_W) 'unittests/test_bloom_counter2.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_bloom_counter2.cc'; fi`

unittests/all_tests-test_skip_list_set.o: unittests/test_skip_list_set.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_skip_list_set.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_skip_list_set.Tpo -c -o unittests/all_tests-test_skip_list_set.o `test -f 'unittests/test_skip_list_set.cc' || echo '$(srcdir)/'`unittests/test_skip_list_set.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_skip_list_set.Tpo unittests/$(DEPDIR)/all_tests-test_skip_list_set.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_skip_list_set.cc' object='unittests/all_tests-test_skip_list_set.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_skip_list_set.o `test -f 'unittests/test_skip_list_set.cc' || echo '$(srcdir)/'`unittests/test_skip_list_set.cc

unittests/all_tests-test_skip_list_set.obj: unittests/test_skip_list_set.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_skip_list_set.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_skip_list_set.Tpo -c -o unittests/all_tests-test_skip_list_set.obj `if test -f 'unittests/test_skip_list_set.cc'; then $(CYGPATH_W) 'unittests/test_skip_list_set.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_skip_list_set.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_skip_list_set.Tpo unittests/$(DEPDIR)/all_tests-test_skip_list_set.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_skip_list_set.cc' object='unittests/all_tests-test_skip_list_set.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_skip_list_set.obj `if test -f 'unittests/test_skip_list_set.cc'; then $(CYGPATH_W) 'unittests/test_skip_list_set.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_skip_list_set.cc'; fi`

unittests/all_tests-test_skip_list_map.o: unittests/test_skip_list_map.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_skip_list_map.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_skip_list_map.Tpo -c -o unittests/all_tests-test_skip_list_map.o `test -f 'unittests/test_skip_list_map.cc' || echo '$(srcdir)/'`unittests/test_skip_list_map.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_skip_list_map.Tpo unittests/$(DEPDIR)/all_tests-test_skip_list_map.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_skip_list_map.cc' object='unittests/all_tests-test_skip_list_map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_skip_list_map.o `test -f 'unittests/test_skip_list_map.cc' || echo '$(srcdir)/'`unittests/test_skip_list_map.cc

unittests/all_tests-test_skip_list_map.obj: unittests/test_skip_list_map.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_skip_list_map.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_skip_list_map.Tpo -c -o unittests/all_tests-test_skip_list_map.obj `if test -f 'unittests/test_skip_list_map.cc'; then $(CYGPATH_W) 'unittests/test_skip_list_map.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_skip_list_map.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_skip_list_map.Tpo unittests/$(DEPDIR)/all_tests-test_skip_list_map.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_skip_list_map.cc' object='unittests/all_tests-test_skip_list_map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_skip_list_map.obj `if test -f 'unittests/test_skip_list_map.cc'; then $(CYGPATH_W) 'unittests/test_skip_list_map.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_skip_list_map.cc'; fi`

unittests/all_tests-test_rbtree.o: unittests/test_rbtree.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_rbtree.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_rbtree.Tpo -c -o unittests/all_tests-test_rbtree.o `test -f 'unittests/test_rbtree.cc' || echo '$(srcdir)/'`unittests/test_rbtree.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_rbtree.Tpo unittests/$(DEPDIR)/all_tests-test_rbtree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_rbtree.cc' object='unittests/all_tests-test_rbtree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_rbtree.o `test -f 'unittests/test_rbtree.cc' || echo '$(srcdir)/'`unittests/test_rbtree.cc

unittests/all_tests-test_rbtree.obj: unittests/test_rbtree.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_rbtree.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_rbtree.Tpo -c -o unittests/all_tests-test_rbtree.obj `if test -f 'unittests/test_rbtree.cc'; then $(CYGPATH_W) 'unittests/test_rbtree.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_rbtree.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_rbtree.Tpo unittests/$(DEPDIR)/all_tests-test_rbtree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_rbtree.cc' object='unittests/all_tests-test_rbtree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_rbtree.obj `if test -f 'unittests/test_rbtree.cc'; then $(CYGPATH_W) 'unittests/test_rbtree.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_rbtree.cc'; fi`

unittests/all_tests-test_multi_thread_skip_list_set.o: unittests/test_multi_thread_skip_list_set.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_multi_thread_skip_list_set.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Tpo -c -o unittests/all_tests-test_multi_thread_skip_list_set.o `test -f 'unittests/test_multi_thread_skip_list_set.cc' || echo '$(srcdir)/'`unittests/test_multi_thread_skip_list_set.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Tpo unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_multi_thread_skip_list_set.cc' object='unittests/all_tests-test_multi_thread_skip_list_set.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_multi_thread_skip_list_set.o `test -f 'unittests/test_multi_thread_skip_list_set.cc' || echo '$(srcdir)/'`unittests/test_multi_thread_skip_list_set.cc

unittests/all_tests-test_multi_thread_skip_list_set.obj: unittests/test_multi_thread_skip_list_set.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_multi_thread_skip_list_set.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Tpo -c -o unittests/all_tests-test_multi_thread_skip_list_set.obj `if test -f 'unittests/test_multi_thread_skip_list_set.cc'; then $(CYGPATH_W) 'unittests/test_multi_thread_skip_list_set.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_multi_thread_skip_list_set.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Tpo unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_multi_thread_skip_list_set.cc' object='unittests/all_tests-test_multi_thread_skip_list_set.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_multi_thread_skip_list_set.obj `if test -f 'unittests/test_multi_thread_skip_list_set.cc'; then $(CYGPATH_W) 'unittests/test_multi_thread_skip_list_set.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_multi_thread_skip_list_set.cc'; fi`

unittests/all_tests-test_multi_thread_skip_list_map.o: unittests/test_multi_thread_skip_list_map.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_multi_thread_skip_list_map.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Tpo -c -o unittests/all_tests-test_multi_thread_skip_list_map.o `test -f 'unittests/test_multi_thread_skip_list_map.cc' || echo '$(srcdir)/'`unittests/test_multi_thread_skip_list_map.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Tpo unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_multi_thread_skip_list_map.cc' object='unittests/all_tests-test_multi_thread_skip_list_map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_multi_thread_skip_list_map.o `test -f 'unittests/test_multi_thread_skip_list_map.cc' || echo '$(srcdir)/'`unittests/test_multi_thread_skip_list_map.cc

unittests/all_tests-test_multi_thread_skip_list_map.obj: unittests/test_multi_thread_skip_list_map.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_multi_thread_skip_list_map.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Tpo -c -o unittests/all_tests-test_multi_thread_skip_list_map.obj `if test -f 'unittests/test_multi_thread_skip_list_map.cc'; then $(CYGPATH_W) 'unittests/test_multi_thread_skip_list_map.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_multi_thread_skip_list_map.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Tpo unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_multi_thread_skip_list_map.cc' object='unittests/all_tests-test_multi_thread_skip_list_map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_multi_thread_skip_list_map.obj `if test -f 'unittests/test_multi_thread_skip_list_map.cc'; then $(CYGPATH_W) 'unittests/test_multi_thread_skip_list_map.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_multi_thread_skip_list_map.cc'; fi`

unittests/all_tests-test_read_parser.o: unittests/test_read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_read_parser.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_read_parser.Tpo -c -o unittests/all_tests-test_read_parser.o `test -f 'unittests/test_read_parser.cc' || echo '$(srcdir)/'`unittests/test_read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_read_parser.Tpo unittests/$(DEPDIR)/all_tests-test_read_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_read_parser.cc' object='unittests/all_tests-test_read_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_read_parser.o `test -f 'unittests/test_read_parser.cc' || echo '$(srcdir)/'`unittests/test_read_parser.cc

unittests/all_tests-test_read_parser.obj: unittests/test_read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_read_parser.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_read_parser.Tpo -c -o unittests/all_tests-test_read_parser.obj `if test -f 'unittests/test_read_parser.cc'; then $(CYGPATH_W) 'unittests/test_read_parser.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_read_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_read_parser.Tpo unittests/$(DEPDIR)/all_tests-test_read_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_read_parser.cc' object='unittests/all_tests-test_read_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_read_parser.obj `if test -f 'unittests/test_read_parser.cc'; then $(CYGPATH_W) 'unittests/test_read_parser.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_read_parser.cc'; fi`

unittests/all_tests-test_hash.o: unittests/test_hash.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_hash.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_hash.Tpo -c -o unittests/all_tests-test_hash.o `test -f 'unittests/test_hash.cc' || echo '$(srcdir)/'`unittests/test_hash.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_hash.Tpo unittests/$(DEPDIR)/all_tests-test_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_hash.cc' object='unittests/all_tests-test_hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_hash.o `test -f 'unittests/test_hash.cc' || echo '$(srcdir)/'`unittests/test_hash.cc

unittests/all_tests-test_hash.obj: unittests/test_hash.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_hash.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_hash.Tpo -c -o unittests/all_tests-test_hash.obj `if test -f 'unittests/test_hash.cc'; then $(CYGPATH_W) 'unittests/test_hash.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_hash.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_hash.Tpo unittests/$(DEPDIR)/all_tests-test_hash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_hash.cc' object='unittests/all_tests-test_hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_hash.obj `if test -f 'unittests/test_hash.cc'; then $(CYGPATH_W) 'unittests/test_hash.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_hash.cc'; fi`

unittests/all_tests-test_exp_vector.o: unittests/test_exp_vector.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_exp_vector.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_exp_vector.Tpo -c -o unittests/all_tests-test_exp_vector.o `test -f 'unittests/test_exp_vector.cc' || echo '$(srcdir)/'`unittests/test_exp_vector.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_exp_vector.Tpo unittests/$(DEPDIR)/all_tests-test_exp_vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_exp_vector.cc' object='unittests/all_tests-test_exp_vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_exp_vector.o `test -f 'unittests/test_exp_vector.cc' || echo '$(srcdir)/'`unittests/test_exp_vector.cc

unittests/all_tests-test_exp_vector.obj: unittests/test_exp_vector.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_exp_vector.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_exp_vector.Tpo -c -o unittests/all_tests-test_exp_vector.obj `if test -f 'unittests/test_exp_vector.cc'; then $(CYGPATH_W) 'unittests/test_exp_vector.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_exp_vector.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_exp_vector.Tpo unittests/$(DEPDIR)/all_tests-test_exp_vector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_exp_vector.cc' object='unittests/all_tests-test_exp_vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_exp_vector.obj `if test -f 'unittests/test_exp_vector.cc'; then $(CYGPATH_W) 'unittests/test_exp_vector.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_exp_vector.cc'; fi`

unittests/all_tests-test_thread_pool.o: unittests/test_thread_pool.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_thread_pool.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_thread_pool.Tpo -c -o unittests/all_tests-test_thread_pool.o `test -f 'unittests/test_thread_pool.cc' || echo '$(srcdir)/'`unittests/test_thread_pool.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_thread_pool.Tpo unittests/$(DEPDIR)/all_tests-test_thread_pool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_thread_pool.cc' object='unittests/all_tests-test_thread_pool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_thread_pool.o `test -f 'unittests/test_thread_pool.cc' || echo '$(srcdir)/'`unittests/test_thread_pool.cc

unittests/all_tests-test_thread_pool.obj: unittests/test_thread_pool.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_thread_pool.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_thread_pool.Tpo -c -o unittests/all_tests-test_thread_pool.obj `if test -f 'unittests/test_thread_pool.cc'; then $(CYGPATH_W) 'unittests/test_thread_pool.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_thread_pool.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_thread_pool.Tpo unittests/$(DEPDIR)/all_tests-test_thread_pool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_thread_pool.cc' object='unittests/all_tests-test_thread_pool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_thread_pool.obj `if test -f 'unittests/test_thread_pool.cc'; then $(CYGPATH_W) 'unittests/test_thread_pool.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_thread_pool.cc'; fi`

unittests/all_tests-test_fork_exec.o: unittests/test_fork_exec.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_fork_exec.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_fork_exec.Tpo -c -o unittests/all_tests-test_fork_exec.o `test -f 'unittests/test_fork_exec.cc' || echo '$(srcdir)/'`unittests/test_fork_exec.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_fork_exec.Tpo unittests/$(DEPDIR)/all_tests-test_fork_exec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_fork_exec.cc' object='unittests/all_tests-test_fork_exec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_fork_exec.o `test -f 'unittests/test_fork_exec.cc' || echo '$(srcdir)/'`unittests/test_fork_exec.cc

unittests/all_tests-test_fork_exec.obj: unittests/test_fork_exec.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-test_fork_exec.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-test_fork_exec.Tpo -c -o unittests/all_tests-test_fork_exec.obj `if test -f 'unittests/test_fork_exec.cc'; then $(CYGPATH_W) 'unittests/test_fork_exec.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_fork_exec.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-test_fork_exec.Tpo unittests/$(DEPDIR)/all_tests-test_fork_exec.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/test_fork_exec.cc' object='unittests/all_tests-test_fork_exec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-test_fork_exec.obj `if test -f 'unittests/test_fork_exec.cc'; then $(CYGPATH_W) 'unittests/test_fork_exec.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/test_fork_exec.cc'; fi`

src/all_tests-fibonacci_coding.o: src/fibonacci_coding.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-fibonacci_coding.o -MD -MP -MF src/$(DEPDIR)/all_tests-fibonacci_coding.Tpo -c -o src/all_tests-fibonacci_coding.o `test -f 'src/fibonacci_coding.cc' || echo '$(srcdir)/'`src/fibonacci_coding.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-fibonacci_coding.Tpo src/$(DEPDIR)/all_tests-fibonacci_coding.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/fibonacci_coding.cc' object='src/all_tests-fibonacci_coding.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-fibonacci_coding.o `test -f 'src/fibonacci_coding.cc' || echo '$(srcdir)/'`src/fibonacci_coding.cc

src/all_tests-fibonacci_coding.obj: src/fibonacci_coding.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-fibonacci_coding.obj -MD -MP -MF src/$(DEPDIR)/all_tests-fibonacci_coding.Tpo -c -o src/all_tests-fibonacci_coding.obj `if test -f 'src/fibonacci_coding.cc'; then $(CYGPATH_W) 'src/fibonacci_coding.cc'; else $(CYGPATH_W) '$(srcdir)/src/fibonacci_coding.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-fibonacci_coding.Tpo src/$(DEPDIR)/all_tests-fibonacci_coding.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/fibonacci_coding.cc' object='src/all_tests-fibonacci_coding.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-fibonacci_coding.obj `if test -f 'src/fibonacci_coding.cc'; then $(CYGPATH_W) 'src/fibonacci_coding.cc'; else $(CYGPATH_W) '$(srcdir)/src/fibonacci_coding.cc'; fi`

src/all_tests-MurmurHash3.o: src/MurmurHash3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-MurmurHash3.o -MD -MP -MF src/$(DEPDIR)/all_tests-MurmurHash3.Tpo -c -o src/all_tests-MurmurHash3.o `test -f 'src/MurmurHash3.cpp' || echo '$(srcdir)/'`src/MurmurHash3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-MurmurHash3.Tpo src/$(DEPDIR)/all_tests-MurmurHash3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/MurmurHash3.cpp' object='src/all_tests-MurmurHash3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-MurmurHash3.o `test -f 'src/MurmurHash3.cpp' || echo '$(srcdir)/'`src/MurmurHash3.cpp

src/all_tests-MurmurHash3.obj: src/MurmurHash3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-MurmurHash3.obj -MD -MP -MF src/$(DEPDIR)/all_tests-MurmurHash3.Tpo -c -o src/all_tests-MurmurHash3.obj `if test -f 'src/MurmurHash3.cpp'; then $(CYGPATH_W) 'src/MurmurHash3.cpp'; else $(CYGPATH_W) '$(srcdir)/src/MurmurHash3.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-MurmurHash3.Tpo src/$(DEPDIR)/all_tests-MurmurHash3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/MurmurHash3.cpp' object='src/all_tests-MurmurHash3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-MurmurHash3.obj `if test -f 'src/MurmurHash3.cpp'; then $(CYGPATH_W) 'src/MurmurHash3.cpp'; else $(CYGPATH_W) '$(srcdir)/src/MurmurHash3.cpp'; fi`

src/all_tests-gcc_builtins.o: src/gcc_builtins.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-gcc_builtins.o -MD -MP -MF src/$(DEPDIR)/all_tests-gcc_builtins.Tpo -c -o src/all_tests-gcc_builtins.o `test -f 'src/gcc_builtins.cc' || echo '$(srcdir)/'`src/gcc_builtins.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-gcc_builtins.Tpo src/$(DEPDIR)/all_tests-gcc_builtins.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gcc_builtins.cc' object='src/all_tests-gcc_builtins.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-gcc_builtins.o `test -f 'src/gcc_builtins.cc' || echo '$(srcdir)/'`src/gcc_builtins.cc

src/all_tests-gcc_builtins.obj: src/gcc_builtins.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-gcc_builtins.obj -MD -MP -MF src/$(DEPDIR)/all_tests-gcc_builtins.Tpo -c -o src/all_tests-gcc_builtins.obj `if test -f 'src/gcc_builtins.cc'; then $(CYGPATH_W) 'src/gcc_builtins.cc'; else $(CYGPATH_W) '$(srcdir)/src/gcc_builtins.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-gcc_builtins.Tpo src/$(DEPDIR)/all_tests-gcc_builtins.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gcc_builtins.cc' object='src/all_tests-gcc_builtins.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-gcc_builtins.obj `if test -f 'src/gcc_builtins.cc'; then $(CYGPATH_W) 'src/gcc_builtins.cc'; else $(CYGPATH_W) '$(srcdir)/src/gcc_builtins.cc'; fi`

src/all_tests-read_parser.o: src/read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-read_parser.o -MD -MP -MF src/$(DEPDIR)/all_tests-read_parser.Tpo -c -o src/all_tests-read_parser.o `test -f 'src/read_parser.cc' || echo '$(srcdir)/'`src/read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-read_parser.Tpo src/$(DEPDIR)/all_tests-read_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/read_parser.cc' object='src/all_tests-read_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-read_parser.o `test -f 'src/read_parser.cc' || echo '$(srcdir)/'`src/read_parser.cc

src/all_tests-read_parser.obj: src/read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT src/all_tests-read_parser.obj -MD -MP -MF src/$(DEPDIR)/all_tests-read_parser.Tpo -c -o src/all_tests-read_parser.obj `if test -f 'src/read_parser.cc'; then $(CYGPATH_W) 'src/read_parser.cc'; else $(CYGPATH_W) '$(srcdir)/src/read_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/all_tests-read_parser.Tpo src/$(DEPDIR)/all_tests-read_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/read_parser.cc' object='src/all_tests-read_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/all_tests-read_parser.obj `if test -f 'src/read_parser.cc'; then $(CYGPATH_W) 'src/read_parser.cc'; else $(CYGPATH_W) '$(srcdir)/src/read_parser.cc'; fi`

unittests/all_tests-misc.o: unittests/misc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-misc.o -MD -MP -MF unittests/$(DEPDIR)/all_tests-misc.Tpo -c -o unittests/all_tests-misc.o `test -f 'unittests/misc.cc' || echo '$(srcdir)/'`unittests/misc.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-misc.Tpo unittests/$(DEPDIR)/all_tests-misc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/misc.cc' object='unittests/all_tests-misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-misc.o `test -f 'unittests/misc.cc' || echo '$(srcdir)/'`unittests/misc.cc

unittests/all_tests-misc.obj: unittests/misc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -MT unittests/all_tests-misc.obj -MD -MP -MF unittests/$(DEPDIR)/all_tests-misc.Tpo -c -o unittests/all_tests-misc.obj `if test -f 'unittests/misc.cc'; then $(CYGPATH_W) 'unittests/misc.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/misc.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unittests/$(DEPDIR)/all_tests-misc.Tpo unittests/$(DEPDIR)/all_tests-misc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='unittests/misc.cc' object='unittests/all_tests-misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(all_tests_CXXFLAGS) $(CXXFLAGS) -c -o unittests/all_tests-misc.obj `if test -f 'unittests/misc.cc'; then $(CYGPATH_W) 'unittests/misc.cc'; else $(CYGPATH_W) '$(srcdir)/unittests/misc.cc'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	@list='$(data_DATA)'; test -n "$(datadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(datadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(datadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(datadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(datadir)" || exit $$?; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_DATA)'; test -n "$(datadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(datadir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_LIBRARIES)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_LIBRARIES)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
all_tests.log: all_tests$(EXEEXT)
	@p='all_tests$(EXEEXT)'; \
	b='all_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_LIBRARIES)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(LIBRARIES) $(SCRIPTS) $(DATA) \
		$(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(datadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f lib/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src2/$(DEPDIR)/$(am__dirstamp)
	-rm -f src2/$(am__dirstamp)
	-rm -f unittests/$(DEPDIR)/$(am__dirstamp)
	-rm -f unittests/$(am__dirstamp)
	-rm -f unittests/gtest/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f unittests/gtest/src/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkLIBRARIES clean-checkPROGRAMS \
	clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f lib/$(DEPDIR)/fork_exec.Po
	-rm -f src/$(DEPDIR)/MurmurHash3.Po
	-rm -f src/$(DEPDIR)/all_tests-MurmurHash3.Po
	-rm -f src/$(DEPDIR)/all_tests-fibonacci_coding.Po
	-rm -f src/$(DEPDIR)/all_tests-gcc_builtins.Po
	-rm -f src/$(DEPDIR)/all_tests-read_parser.Po
	-rm -f src/$(DEPDIR)/bloom_query.Po
	-rm -f src/$(DEPDIR)/create_k_unitigs_large_k.Po
	-rm -f src/$(DEPDIR)/create_k_unitigs_large_k2.Po
	-rm -f src/$(DEPDIR)/error_corrected2frg.Po
	-rm -f src/$(DEPDIR)/fibonacci_coding.Po
	-rm -f src/$(DEPDIR)/filter_overlap_file.Po
	-rm -f src/$(DEPDIR)/gcc_builtins.Po
	-rm -f src/$(DEPDIR)/homo_trim.Po
	-rm -f src/$(DEPDIR)/read_parser.Po
	-rm -f src/$(DEPDIR)/reduce_sr.Po
	-rm -f src/$(DEPDIR)/rename_filter_fastq.Po
	-rm -f src/$(DEPDIR)/reverse_complement.Po
	-rm -f src/$(DEPDIR)/samToDelta.Po
	-rm -f src/$(DEPDIR)/sorted_merge.Po
	-rm -f src2/$(DEPDIR)/addSurrogatesToFrgCtgFile.Po
	-rm -f src2/$(DEPDIR)/collectReadSequencesForLocalGapClosing.Po
	-rm -f src2/$(DEPDIR)/createFastaSuperReadSequences.Po
	-rm -f src2/$(DEPDIR)/createKUnitigMaxOverlaps.Po
	-rm -f src2/$(DEPDIR)/create_sr_frg.Po
	-rm -f src2/$(DEPDIR)/eliminateBadSuperReadsUsingList.Po
	-rm -f src2/$(DEPDIR)/extendSuperReadsBasedOnUniqueExtensions.Po
	-rm -f src2/$(DEPDIR)/extendSuperReadsForUniqueKmerNeighbors.Po
	-rm -f src2/$(DEPDIR)/findMatchesBetweenKUnitigsAndReads.Po
	-rm -f src2/$(DEPDIR)/getATBiasInCoverageForIllumina_v2.Po
	-rm -f src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFile.Po
	-rm -f src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFileTwoPasses.Po
	-rm -f src2/$(DEPDIR)/joinKUnitigs_v3.Po
	-rm -f src2/$(DEPDIR)/killBadKUnitigs.Po
	-rm -f src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC.Po
	-rm -f src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2.Po
	-rm -f src2/$(DEPDIR)/outputRecordsNotOnList.Po
	-rm -f src2/$(DEPDIR)/runByDirectory.Po
	-rm -f src2/$(DEPDIR)/splitFileAtNs.Po
	-rm -f unittests/$(DEPDIR)/all_tests-misc.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_bloom_filter.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_charb.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_charbuf.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_exp_buffer.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_exp_vector.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_fork_exec.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_hash.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_heap.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_main.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_rbtree.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_read_parser.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_skip_list_map.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_skip_list_set.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_sr_names.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_thread_pool.Po
	-rm -f unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Po
	-rm -f unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dataDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f lib/$(DEPDIR)/fork_exec.Po
	-rm -f src/$(DEPDIR)/MurmurHash3.Po
	-rm -f src/$(DEPDIR)/all_tests-MurmurHash3.Po
	-rm -f src/$(DEPDIR)/all_tests-fibonacci_coding.Po
	-rm -f src/$(DEPDIR)/all_tests-gcc_builtins.Po
	-rm -f src/$(DEPDIR)/all_tests-read_parser.Po
	-rm -f src/$(DEPDIR)/bloom_query.Po
	-rm -f src/$(DEPDIR)/create_k_unitigs_large_k.Po
	-rm -f src/$(DEPDIR)/create_k_unitigs_large_k2.Po
	-rm -f src/$(DEPDIR)/error_corrected2frg.Po
	-rm -f src/$(DEPDIR)/fibonacci_coding.Po
	-rm -f src/$(DEPDIR)/filter_overlap_file.Po
	-rm -f src/$(DEPDIR)/gcc_builtins.Po
	-rm -f src/$(DEPDIR)/homo_trim.Po
	-rm -f src/$(DEPDIR)/read_parser.Po
	-rm -f src/$(DEPDIR)/reduce_sr.Po
	-rm -f src/$(DEPDIR)/rename_filter_fastq.Po
	-rm -f src/$(DEPDIR)/reverse_complement.Po
	-rm -f src/$(DEPDIR)/samToDelta.Po
	-rm -f src/$(DEPDIR)/sorted_merge.Po
	-rm -f src2/$(DEPDIR)/addSurrogatesToFrgCtgFile.Po
	-rm -f src2/$(DEPDIR)/collectReadSequencesForLocalGapClosing.Po
	-rm -f src2/$(DEPDIR)/createFastaSuperReadSequences.Po
	-rm -f src2/$(DEPDIR)/createKUnitigMaxOverlaps.Po
	-rm -f src2/$(DEPDIR)/create_sr_frg.Po
	-rm -f src2/$(DEPDIR)/eliminateBadSuperReadsUsingList.Po
	-rm -f src2/$(DEPDIR)/extendSuperReadsBasedOnUniqueExtensions.Po
	-rm -f src2/$(DEPDIR)/extendSuperReadsForUniqueKmerNeighbors.Po
	-rm -f src2/$(DEPDIR)/findMatchesBetweenKUnitigsAndReads.Po
	-rm -f src2/$(DEPDIR)/getATBiasInCoverageForIllumina_v2.Po
	-rm -f src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFile.Po
	-rm -f src2/$(DEPDIR)/getSuperReadInsertCountsFromReadPlacementFileTwoPasses.Po
	-rm -f src2/$(DEPDIR)/joinKUnitigs_v3.Po
	-rm -f src2/$(DEPDIR)/killBadKUnitigs.Po
	-rm -f src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC.Po
	-rm -f src2/$(DEPDIR)/makeAdjustmentFactorsForNumReadsForAStatBasedOnGC_v2.Po
	-rm -f src2/$(DEPDIR)/outputRecordsNotOnList.Po
	-rm -f src2/$(DEPDIR)/runByDirectory.Po
	-rm -f src2/$(DEPDIR)/splitFileAtNs.Po
	-rm -f unittests/$(DEPDIR)/all_tests-misc.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_bloom_counter2.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_bloom_filter.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_charb.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_charbuf.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_exp_buffer.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_exp_vector.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_fork_exec.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_hash.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_heap.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_main.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_map.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_multi_thread_skip_list_set.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_rbtree.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_read_parser.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_skip_list_map.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_skip_list_set.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_sr_names.Po
	-rm -f unittests/$(DEPDIR)/all_tests-test_thread_pool.Po
	-rm -f unittests/gtest/src/$(DEPDIR)/libgtest_a-gtest-all.Po
	-rm -f unittests/gtest/src/$(DEPDIR)/libgtest_main_a-gtest_main.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dataDATA uninstall-dist_binSCRIPTS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkLIBRARIES \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dataDATA \
	install-dist_binSCRIPTS install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS uninstall-dataDATA \
	uninstall-dist_binSCRIPTS

.PRECIOUS: Makefile

.yaggo.hpp:
	$(V_YAGGO)$(YAGGO) --license $(srcdir)/header-license -o $@ $<

src/MasurcaPaths.pm: src/MasurcaPaths.pm.in Makefile
	mkdir -p $(dir $@)
	sed -e 's,[@]bindir[@],$(bindir),g' \
	    -e 's,[@]libdir[@],$(libdir),g' \
	    -e 's,[@]PERL_EXT_DIR[@],$(PERL_EXT_LIB),g' < $< > $@
	chmod +x $@

##############################
# Doxygen
##############################
#include doxygen.am
# MOSTLYCLEANFILE = doxygen-doc
# EXTRA_DIST += doxygen.cfg
# .PHONY: doxygen-doc
# doxygen-doc: doxygen.cfg
# 	rm -rf $@
# 	doxygen $<

##############################
# Extra configuration for development tree
##############################
-include $(srcdir)/development.mk
-include $(srcdir)/personal.mk

##############################
# Info
##############################
print-%:
	@echo $($*)

##############################
# data generation
##############################
#dist_data_DATA = data/adapter_0
#CLEANFILES += data/adapter_0
#SUFFIXES = _0 .fa
#.fa_0:
#	$(AM_V_GEN)mkdir -p $(@D); jellyfish count -m 24 -s 5k -C -t 10 -r -o $$(dirname $@)/$$(basename $@ _0) $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
